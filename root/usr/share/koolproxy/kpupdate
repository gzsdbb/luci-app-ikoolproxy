#!/bin/sh
# set -x

. /lib/functions.sh

CONFIG=koolproxy
KP_DIR=/usr/share/koolproxy
TMP_DIR=/tmp/koolproxy
LOGFILE="/var/log/koolproxy.log"

config_t_get() {
	local index=0
	[ -n "$4" ] && index=$4
	local ret=$(uci get $CONFIG.@$1[$index].$2 2>/dev/null)
	echo ${ret:=$3}
}

limit_log() {
	local log=$1
	[ ! -f "$log" ] && return
	local sc=100
	[ -n "$2" ] && sc=$2
	local count=$(grep -c "" $log)
	if [ $count -gt $sc ];then
		let count=count-$sc
		sed -i "1,$count d" $log
	fi
}

init_env() {
	rm -rf "$LOGFILE"
	mkdir -p "$TMP_DIR"
}

restart_koolproxy() {
	/etc/init.d/koolproxy restart
}

update_rules() {
	echo $(date "+%F %T"): ------------------- 内置规则更新 >>$LOGFILE
	url_koolproxy="https://yaof.coding.net/p/ikoolproxy/d/rules/git/raw/master/rules/koolproxy.txt"
	url_kpdaily="https://yaof.coding.net/p/ikoolproxy/d/rules/git/raw/master/rules/daily.txt"
	url_kpvideo="https://yaof.coding.net/p/ikoolproxy/d/rules/git/raw/master/rules/kp.dat"
	url_adguard="https://yaof.coding.net/p/ikoolproxy/d/rules/git/raw/master/rules/adg.txt"
	url_steven="https://yaof.coding.net/p/ikoolproxy/d/rules/git/raw/master/rules/steven.txt"
	url_yhosts="https://yaof.coding.net/p/ikoolproxy/d/rules/git/raw/master/rules/yhosts.txt"
	url_antiad="https://yaof.coding.net/p/ikoolproxy/d/rules/git/raw/master/rules/antiad.txt"
	url_banben="https://yaof.coding.net/p/ikoolproxy/d/rules/git/raw/master/rules/adgk.txt"
	url_kpipset="https://yaof.coding.net/p/ikoolproxy/d/rules/git/raw/master/rules/koolproxy_ipset.conf"
	url_dnsmasq="https://yaof.coding.net/p/ikoolproxy/d/rules/git/raw/master/rules/dnsmasq.adblock"

	echo $(date "+%F %T"): ------------------- 下载已勾选的规则 >>$LOGFILE
	local rulelist="$(uci -q get koolproxy.@global[0].koolproxy_rules)"
	for rule in $rulelist
	do
		case "$rule" in
			koolproxy.txt)
				for i in {1..5}; do
					wget --no-check-certificate -4 -c -T 8 -t 10 -a $TMP_DIR/Download.log -O $TMP_DIR/koolproxy.txt $url_koolproxy
					koolproxy_size=`ls -l $TMP_DIR/koolproxy.txt | awk '{print $5}'`
					if [[ "$koolproxy_size" -gt 0 ]]; then
						echo $(date "+%F %T"): ------------------- KP静态规则文件下载完成并等待校验 >>$LOGFILE
						koolproxy_update=1	
				break
					else
						echo $(date "+%F %T"): ------------------- KP静态规则文件下载失败 >>$LOGFILE
					fi
				done
			;;
			daily.txt)
				for i in {1..5}; do
					wget --no-check-certificate -4 -c -T 8 -t 10 -a $TMP_DIR/Download.log -O $TMP_DIR/daily.txt $url_kpdaily
					kpdaily_size=`ls -l $TMP_DIR/daily.txt | awk '{print $5}'`
					if [[ "$kpdaily_size" -gt 0 ]]; then
						echo $(date "+%F %T"): ------------------- KP每日规则文件下载完成并等待校验 >>$LOGFILE
						kpdaily_update=1		
				break
					else
						echo $(date "+%F %T"): ------------------- KP每日规则文件下载失败 >>$LOGFILE
					fi
				done
			;;
			kp.dat)
				for i in {1..5}; do
					wget --no-check-certificate -4 -c -T 8 -t 10 -a $TMP_DIR/Download.log -O $TMP_DIR/kp.dat $url_kpvideo
					kpvideo_size=`ls -l $TMP_DIR/kp.dat | awk '{print $5}'`
					if [[ "$kpvideo_size" -gt 0 ]]; then
						echo $(date "+%F %T"): ------------------- KP视频规则文件下载完成并等待校验 >>$LOGFILE
						kpvideo_update=1
				break
					else
						echo $(date "+%F %T"): ------------------- KP视频规则文件下载失败 >>$LOGFILE
					fi
				done
			;;
			dnsmasq.adblock)
				if [ "$koolproxy_host" != "1" ];then
					for i in {1..5}; do
						wget --no-check-certificate -4 -c -T 8 -t 10 -a $TMP_DIR/Download.log -O $TMP_DIR/dnsmasq.adblock $url_dnsmasq
						dnsmasq_size=`ls -l $TMP_DIR/dnsmasq.adblock | awk '{print $5}'`
						if [[ "$dnsmasq_size" -gt 0 ]]; then
							echo $(date "+%F %T"): ------------------- dnsmasq.adblock文件下载完成并等待校验 >>$LOGFILE
				dnsmasq_update=1
					break
						else
							echo $(date "+%F %T"): ------------------- dnsmasq.adblock文件下载失败 >>$LOGFILE
						fi
					done
				fi
			;;
		esac
	done

	local rulelist="$(uci -q get koolproxy.@global[0].thirdparty_rules)"
	for rule in $rulelist
	do
		case "$rule" in
                        adg.txt)
				for i in {1..5}; do
					wget --no-check-certificate -4 -c -T 8 -t 10 -a $TMP_DIR/Download.log -O $TMP_DIR/adg.txt $url_adguard
					adguard_size=`ls -l $TMP_DIR/adg.txt | awk '{print $5}'`
					if [[ "$adguard_size" -gt 0 ]]; then
						echo $(date "+%F %T"): ------------------- adguard规则文件下载完成并等待校验 >>$LOGFILE
						adguard_update=1
				break
					else
						echo $(date "+%F %T"): ------------------- adguard规则文件下载失败 >>$LOGFILE
					fi
				done
			;;
			steven.txt)
				for i in {1..5}; do
					wget --no-check-certificate -4 -c -T 8 -t 10 -a $TMP_DIR/Download.log -O $TMP_DIR/steven.txt $url_steven
					steven_size=`ls -l $TMP_DIR/steven.txt | awk '{print $5}'`
					if [[ "$steven_size" -gt 0 ]]; then
						echo $(date "+%F %T"): ------------------- steven规则文件下载完成并等待校验 >>$LOGFILE
						steven_update=1
				break
					else
						echo $(date "+%F %T"): ------------------- steven规则文件下载失败 >>$LOGFILE
					fi
				done
			;;
			yhosts.txt)
				for i in {1..5}; do
					wget --no-check-certificate -4 -c -T 8 -t 10 -a $TMP_DIR/Download.log -O $TMP_DIR/yhosts.txt $url_yhosts
					yhosts_size=`ls -l $TMP_DIR/yhosts.txt | awk '{print $5}'`
					if [[ "$yhosts_size" -gt 0 ]]; then
						echo $(date "+%F %T"): ------------------- yhosts规则文件下载完成并等待校验 >>$LOGFILE
						yhosts_update=1
				break
					else
						echo $(date "+%F %T"): ------------------- yhosts规则文件下载失败 >>$LOGFILE
					fi
				done
			;;
			antiad.txt)
				for i in {1..5}; do
					wget --no-check-certificate -4 -c -T 8 -t 10 -a $TMP_DIR/Download.log -O $TMP_DIR/antiad.txt $url_antiad
					antiad_size=`ls -l $TMP_DIR/antiad.txt | awk '{print $5}'`
					if [[ "$antiad_size" -gt 0 ]]; then
						echo $(date "+%F %T"): ------------------- antiad规则文件下载完成并等待校验 >>$LOGFILE
						antiad_update=1
				break
					else
						echo $(date "+%F %T"): ------------------- antiad规则文件下载失败 >>$LOGFILE
					fi
				done
			;;
		        adgk.txt)
				for i in {1..5}; do
					wget --no-check-certificate -4 -c -T 8 -t 10 -a $TMP_DIR/Download.log -O $TMP_DIR/adgk.txt $url_banben
					banben_size=`ls -l $TMP_DIR/adgk.txt | awk '{print $5}'`
					if [[ "$banben_size" -gt 0 ]]; then
						echo $(date "+%F %T"): ------------------- banben规则文件下载完成并等待校验 >>$LOGFILE
						banben_update=1
				break
					else
						echo $(date "+%F %T"): ------------------- banben规则文件下载失败 >>$LOGFILE
					fi
				done
			;;
		esac
	done

	if [ "$koolproxy_mode" == "2" ];then
		for i in {1..5}; do
			wget --no-check-certificate -4 -c -T 8 -t 10 -a $TMP_DIR/Download.log -O $TMP_DIR/koolproxy_ipset.conf $url_kpipset
			kpipset_size=`ls -l $TMP_DIR/koolproxy_ipset.conf | awk '{print $5}'`
			if [[ "$kpipset_size" -gt 0 ]]; then
				echo $(date "+%F %T"): ------------------- koolproxy_ipset.conf文件下载完成并等待校验 >>$LOGFILE
				kpipset_update=1
		break
			else
				echo $(date "+%F %T"): ------------------- koolproxy_ipset.conf文件下载失败 >>$LOGFILE
			fi
		done
	fi

	echo >>$LOGFILE
	echo $(date "+%F %T"): ------------------- 检查与替换规则 >>$LOGFILE
if [ "$koolproxy_update" == "1" ]; then
	koolproxy_rules_local=`cat $TMP_DIR/koolproxy.txt  | sed -n '3p'|awk '{print $3,$4}'`
	koolproxy_rules_old_local=`cat $KP_DIR/data/rules/koolproxy.txt  | sed -n '3p'|awk '{print $3,$4}'`
	touch $KP_DIR/data/rules/koolproxy.txt
	cmp -s $TMP_DIR/koolproxy.txt $KP_DIR/data/rules/koolproxy.txt
	if [ "$?" == "1" ]; then
		mv -f $TMP_DIR/koolproxy.txt $KP_DIR/data/rules/koolproxy.txt
		echo $(date "+%F %T"): ------------------- KP静态规则从$koolproxy_rules_old_local更新至$koolproxy_rules_local >>$LOGFILE
	else
		echo $(date "+%F %T"): ------------------- 检测到KP静态规则本地版本与在线版本完全相同 >>$LOGFILE
	fi
fi

if [ "$kpdaily_update" == "1" ]; then
	kpdaily_rule_md5=`md5sum $TMP_DIR/daily.txt  | awk '{print $1}'`
	kpdaily_rule_old_md5=`md5sum $KP_DIR/data/rules/daily.txt  | awk '{print $1}'`
	touch $KP_DIR/data/rules/daily.txt
	cmp -s $TMP_DIR/daily.txt $KP_DIR/data/rules/daily.txt
	if [ "$?" == "1" ]; then
		mv -f $TMP_DIR/daily.txt $KP_DIR/data/rules/daily.txt
		echo $(date "+%F %T"): ------------------- KP每日规则从$kpdaily_rule_old_md5更新至$kpdaily_rule_md5 >>$LOGFILE
	else
		echo $(date "+%F %T"): ------------------- 检测到KP每日规则本地版本与在线版本完全相同 >>$LOGFILE
	fi
fi

if [ "$kpvideo_update" == "1" ]; then
	kp_video_md5=`md5sum $TMP_DIR/kp.dat  | awk '{print $1}'`
	kp_video_old_md5=`md5sum $KP_DIR/data/rules/kp.dat  | awk '{print $1}'`
	touch $KP_DIR/data/rules/kp.dat
	cmp -s $TMP_DIR/kp.dat $KP_DIR/data/rules/kp.dat
	if [ "$?" == "1" ]; then
		mv -f $TMP_DIR/kp.dat $KP_DIR/data/rules/kp.dat
		echo $(date "+%F %T"): ------------------- KP视频规则从$kp_video_old_md5更新至$kp_video_md5 >>$LOGFILE
	else
		echo $(date "+%F %T"): ------------------- 检测到KP视频规则本地版本与在线版本完全相同 >>$LOGFILE
	fi
fi

if [ "$adguard_update" == "1" ]; then
	adguard_rules_local=`cat $TMP_DIR/adg.txt  | sed -n '4p'|awk '{print $4}'`
	adguard_rules_old_local=`cat $KP_DIR/data/rules/adg.txt  | sed -n '4p'|awk '{print $4}'`
	touch $KP_DIR/data/rules/adg.txt
	cmp -s $TMP_DIR/adg.txt $KP_DIR/data/rules/adg.txt
	if [ "$?" == "1" ]; then
		mv -f $TMP_DIR/adg.txt $KP_DIR/data/rules/adg.txt
		echo $(date "+%F %T"): ------------------- AdGuard规则从$adguard_rules_old_local更新至$adguard_rules_local >>$LOGFILE
	else
		echo $(date "+%F %T"): ------------------- 检测到AdGuard规则本地版本与在线版本完全相同 >>$LOGFILE
	fi
fi

if [ "$steven_update" == "1" ]; then
	steven_rules_local=`cat $TMP_DIR/steven.txt  | sed -n '2p'|awk '{print $3,$4,$5,$6}'`
	steven_rules_old_local=`cat $KP_DIR/data/rules/steven.txt  | sed -n '2p'|awk '{print $3,$4,$5,$6}'`
	touch $KP_DIR/data/rules/steven.txt
	cmp -s $TMP_DIR/steven.txt $KP_DIR/data/rules/steven.txt
	if [ "$?" == "1" ]; then
		mv -f $TMP_DIR/steven.txt $KP_DIR/data/rules/steven.txt
		echo $(date "+%F %T"): ------------------- Steven规则从$steven_rules_old_local更新至$steven_rules_local >>$LOGFILE
	else
		echo $(date "+%F %T"): ------------------- 检测到Steven规则本地版本与在线版本完全相同 >>$LOGFILE
	fi
fi

if [ "$yhosts_update" == "1" ]; then
	yhosts_rules_local=`cat $TMP_DIR/yhosts.txt  | sed -n '1p' | cut -d ":" -f2`
	yhosts_rules_old_local=`cat $KP_DIR/data/rules/yhosts.txt  | sed -n '1p' | cut -d ":" -f2`
	touch $KP_DIR/data/rules/yhosts.txt
	cmp -s $TMP_DIR/yhosts.txt $KP_DIR/data/rules/yhosts.txt
	if [ "$?" == "1" ]; then
		mv -f $TMP_DIR/yhosts.txt $KP_DIR/data/rules/yhosts.txt
		echo $(date "+%F %T"): ------------------- Yhosts规则从$yhosts_rules_old_local更新至$yhosts_rules_local >>$LOGFILE
	else
		echo $(date "+%F %T"): ------------------- 检测Yhosts规则到本地版本与在线版本完全相同 >>$LOGFILE
	fi
fi

if [ "$antiad_update" == "1" ]; then
	antiad_rules_local=`cat $TMP_DIR/antiad.txt  | sed -n '2p' | cut -d "=" -f2`
	antiad_rules_old_local=`cat $KP_DIR/data/rules/antiad.txt  | sed -n '2p' | cut -d "=" -f2`
	touch $KP_DIR/data/rules/antiad.txt
	cmp -s $TMP_DIR/antiad.txt $KP_DIR/data/rules/antiad.txt
	if [ "$?" == "1" ]; then
		mv -f $TMP_DIR/antiad.txt $KP_DIR/data/rules/antiad.txt
		echo $(date "+%F %T"): ------------------- AntiAD规则从$antiad_rules_old_local更新至$antiad_rules_local >>$LOGFILE
	else
		echo $(date "+%F %T"): ------------------- 检测到AntiAD规则本地版本与在线版本完全相同 >>$LOGFILE
	fi
fi

if [ "$banben_update" == "1" ]; then
	banben_rules_local=`cat $TMP_DIR/adgk.txt  | sed -n '1p'|awk '{print $3}'`
	banben_rules_old_local=`cat $KP_DIR/data/rules/adgk.txt  | sed -n '1p'|awk '{print $3}'`
	touch $KP_DIR/data/rules/adgk.txt
	cmp -s $TMP_DIR/adgk.txt $KP_DIR/data/rules/adgk.txt
	if [ "$?" == "1" ]; then
		mv -f $TMP_DIR/adgk.txt $KP_DIR/data/rules/adgk.txt
		echo $(date "+%F %T"): ------------------- Banben规则从$banben_rules_old_local更新至$banben_rules_local >>$LOGFILE
	else
		echo $(date "+%F %T"): ------------------- 检测到Banben规则本地版本与在线版本完全相同 >>$LOGFILE
	fi
fi

if [ "$kpipset_update" == "1" ]; then
	kpipset_md5=`md5sum $TMP_DIR/koolproxy_ipset.conf  | awk '{print $1}'`
	kpipset_old_md5=`md5sum $KP_DIR/koolproxy_ipset.conf  | awk '{print $1}'`
	touch $KP_DIR/koolproxy_ipset.conf
	cmp -s $TMP_DIR/koolproxy_ipset.conf $KP_DIR/koolproxy_ipset.conf
	if [ "$?" == "1" ]; then
		mv -f $TMP_DIR/koolproxy_ipset.conf $KP_DIR/koolproxy_ipset.conf
		echo $(date "+%F %T"): ------------------- koolproxy_ipset.conf文件从$kpipset_old_md5更新至$kpipset_md5 >>$LOGFILE
	else
		echo $(date "+%F %T"): ------------------- 检测到koolproxy_ipset.conf本地文件与在线文件完全相同 >>$LOGFILE
	fi
fi

if [ "$dnsmasq_update" == "1" ]; then
	dnsmasq_md5=`md5sum $TMP_DIR/dnsmasq.adblock  | awk '{print $1}'`
	dnsmasq_old_md5=`md5sum $KP_DIR/dnsmasq.adblock  | awk '{print $1}'`
	touch $KP_DIR/dnsmasq.adblock
	cmp -s $TMP_DIR/dnsmasq.adblock $KP_DIR/dnsmasq.adblock
	if [ "$?" == "1" ]; then
		mv -f $TMP_DIR/dnsmasq.adblock $KP_DIR/dnsmasq.adblock
		echo $(date "+%F %T"): ------------------- dnsmasq.adblock文件从$dnsmasq_old_md5更新至$dnsmasq_md5 >>$LOGFILE
	else
		echo $(date "+%F %T"): ------------------- 检测到dnsmasq.adblock本地文件与在线文件完全相同 >>$LOGFILE
	fi
fi

	echo $(date "+%F %T"): ------------------- 内置规则更新完成 >>$LOGFILE
	RESTART_KOOLPROXY=true
}

update_adb_host() {
	echo $(date "+%F %T"): ------------------- 正在下载并转换Adblock Plus Hosts规则 >>$LOGFILE
	$KP_DIR/adblockplus
	echo $(date "+%F %T"): ------------------- Adblock Plus Hosts规则更新完成 >>$LOGFILE
	if [ "$?" != "0" ]; then
		RESTART_DNSMASQ=true
	fi
}

# main process
koolproxy_mode=$(config_t_get global koolproxy_mode 1)
koolproxy_host=$(config_t_get global koolproxy_host 0)
init_env
limit_log $LOGFILE

# update rules
update_rules

# update ADB Plus Host
if [ "$koolproxy_mode" == "2" ] && [ "$koolproxy_host" == "1" ];then
	update_adb_host
fi

if [ $RESTART_KOOLPROXY ]; then
	restart_koolproxy
	echo >>$LOGFILE
	echo $(date "+%F %T"): -------------------  重启koolproxy进程 >>$LOGFILE
fi

rm -rf "$TMP_DIR"

